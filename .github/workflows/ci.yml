name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: P@ssw0rd
          POSTGRES_DB: auth_db
        ports:
          - 5432:5432
        volumes:
          - ./backend/app/database/init.sql:/docker-entrypoint-initdb.d/init.sql
        options: >-
          --health-start-period 30s
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          pip install uv --upgrade  # Устанавливаем последнюю версию uv
          uv --version  # Проверяем версию uv

      - name: Install backend dependencies
        run: |
          cd backend
          uv sync --extra dev  # Явно устанавливаем dev-зависимости
          ls -la .venv/bin  # Проверяем, что pytest установлен
          uv run -- python -m pytest --version  # Проверяем доступность pytest

      - name: Run backend tests
        env:
          SECRET_KEY: your-very-secret-key-123456789
          DATABASE_URL: postgresql+psycopg2://postgres:P%40ssw0rd@localhost:5432/auth_db
          TEST_DATABASE_URL: postgresql+psycopg2://postgres:P%40ssw0rd@localhost:5432/auth_test_db
          PG_HOST: localhost
          PG_PORT: 5432
          PG_USER: postgres
          PG_PASSWORD: P@ssw0rd
          PG_DB: auth_db
        run: |
          cd backend
          uv run -- python -m pytest tests/ --cov=app --cov-report=xml  # Используем модуль pytest

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          files: ./backend/coverage.xml

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test