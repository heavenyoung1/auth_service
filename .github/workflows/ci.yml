name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ vars.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD  }}
          POSTGRES_DB: ${{ vars.PG_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: pip install uv

      - name: Install backend dependencies
        run: |
          cd backend
          uv sync --no-dev

      - name: Run backend tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_URL: postgresql://${{ vars.PG_USER }}:${{ secrets.PG_PASSWORD }}@localhost:5432/auth_db
          TEST_DATABASE_URL: postgresql://${{ vars.PG_USER }}:${{ secrets.PG_PASSWORD }}@localhost:5432/auth_test_db
        run: |
          cd backend
          pytest tests/ --cov=app --cov-report=xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          files: ./backend/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test